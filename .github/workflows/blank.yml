name: Secret Scan (Gitleaks)

on:
  workflow_dispatch:

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq git curl

      - name: Define repositories
        id: repos
        run: |
          # Predefined repositories to scan
          REPOS=(
            "user1/repo1"
            "user2/repo2"
            "user3/repo3"
          )
          echo "Repositories to scan: ${REPOS[@]}"
          echo "REPOS=${REPOS[@]}" >> $GITHUB_ENV

      - name: Scan repositories with Gitleaks
        run: |
          echo '{ "openai_keys": [] }' > openai.json
          for repo in $REPOS; do
            echo "Cloning $repo..."
            git clone --depth 1 "https://github.com/$repo.git" target || continue
            gitleaks detect --source ./target --report-format json --report-path report.json || true
            if [ -s report.json ]; then
              cat report.json | jq '[.findings[] | select(.Secret | test("^sk-[A-Za-z0-9]{20,}"))]' > tmp.json
              jq -s '{ "openai_keys": (.[0] + .[1]) }' openai.json tmp.json > merged.json
              mv merged.json openai.json
            fi
            rm -rf target report.json tmp.json || true
          done

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: openai-report
          path: openai.json
