name: Secret Scan (Gitleaks)

on:
  workflow_dispatch:

jobs:
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq git curl

      - name: Define keywords
        id: keywords
        run: |
          # Predefined list of keywords to search in GitHub code
          KEYWORDS=("openai" "sk-" "apikey" "secret" "token")
          echo "${KEYWORDS[@]}" > keywords.txt
          echo "::set-output name=list::${KEYWORDS[@]}"

      - name: Search repositories by keywords
        id: search
        run: |
          MAX_REPOS=5
          REPOS=""
          for KEYWORD in ${{ steps.keywords.outputs.list }}; do
            echo "Searching repos with keyword: $KEYWORD"
            RESULTS=$(curl -s -H "Accept: application/vnd.github+json" \
              "https://api.github.com/search/code?q=${KEYWORD}+in:file&per_page=${MAX_REPOS}" \
              | jq -r '.items[].repository.full_name' | sort -u)
            REPOS="$REPOS $RESULTS"
          done
          # Remove duplicates
          REPOS=$(echo "$REPOS" | tr ' ' '\n' | sort -u | tr '\n' ' ')
          echo "Repositories found: $REPOS"
          echo "::set-output name=repos::$REPOS"

      - name: Scan repositories with Gitleaks
        run: |
          echo '{ "openai_keys": [] }' > openai.json
          for repo in ${{ steps.search.outputs.repos }}; do
            echo "Cloning $repo..."
            git clone --depth 1 "https://github.com/$repo.git" target || continue
            gitleaks detect --source ./target --report-format json --report-path report.json || true
            if [ -s report.json ]; then
              cat report.json | jq '[.findings[] | select(.Secret | test("^sk-[A-Za-z0-9]{20,}"))]' > tmp.json
              jq -s '{ "openai_keys": (.[0] + .[1]) }' openai.json tmp.json > merged.json
              mv merged.json openai.json
            fi
            rm -rf target report.json tmp.json || true
          done

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: openai-report
          path: openai.json
